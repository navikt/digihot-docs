/* tslint:disable */
/* eslint-disable */
/**
 * Hjelpemiddels√∏knad model spec
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HjelpemiddelVilkar,
    HjelpemiddelVilkarFromJSON,
    HjelpemiddelVilkarFromJSONTyped,
    HjelpemiddelVilkarToJSON,
    Tilbehor,
    TilbehorFromJSON,
    TilbehorFromJSONTyped,
    TilbehorToJSON,
} from './';

/**
 * 
 * @export
 * @interface Hjelpemiddel
 */
export interface Hjelpemiddel {
    /**
     * 
     * @type {number}
     * @memberof Hjelpemiddel
     */
    antall: number;
    /**
     * 
     * @type {string}
     * @memberof Hjelpemiddel
     */
    beskrivelse: string;
    /**
     * 
     * @type {string}
     * @memberof Hjelpemiddel
     */
    hjelpemiddelkategori?: string;
    /**
     * 
     * @type {string}
     * @memberof Hjelpemiddel
     */
    hmsNr: string;
    /**
     * 
     * @type {string}
     * @memberof Hjelpemiddel
     */
    tilleggsinformasjon: string;
    /**
     * 
     * @type {string}
     * @memberof Hjelpemiddel
     */
    rangering?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Hjelpemiddel
     */
    utlevertFraHjelpemiddelsentralen: boolean;
    /**
     * 
     * @type {Array<HjelpemiddelVilkar>}
     * @memberof Hjelpemiddel
     */
    vilkarliste?: Array<HjelpemiddelVilkar>;
    /**
     * 
     * @type {Array<Tilbehor>}
     * @memberof Hjelpemiddel
     */
    tilbehorListe?: Array<Tilbehor>;
    /**
     * 
     * @type {string}
     * @memberof Hjelpemiddel
     */
    begrunnelse?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Hjelpemiddel
     */
    kanIkkeTilsvarande?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Hjelpemiddel
     */
    navn?: string;
}

export function HjelpemiddelFromJSON(json: any): Hjelpemiddel {
    return HjelpemiddelFromJSONTyped(json, false);
}

export function HjelpemiddelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Hjelpemiddel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'antall': json['antall'],
        'beskrivelse': json['beskrivelse'],
        'hjelpemiddelkategori': !exists(json, 'hjelpemiddelkategori') ? undefined : json['hjelpemiddelkategori'],
        'hmsNr': json['hmsNr'],
        'tilleggsinformasjon': json['tilleggsinformasjon'],
        'rangering': !exists(json, 'rangering') ? undefined : json['rangering'],
        'utlevertFraHjelpemiddelsentralen': json['utlevertFraHjelpemiddelsentralen'],
        'vilkarliste': !exists(json, 'vilkarliste') ? undefined : ((json['vilkarliste'] as Array<any>).map(HjelpemiddelVilkarFromJSON)),
        'tilbehorListe': !exists(json, 'tilbehorListe') ? undefined : ((json['tilbehorListe'] as Array<any>).map(TilbehorFromJSON)),
        'begrunnelse': !exists(json, 'begrunnelse') ? undefined : json['begrunnelse'],
        'kanIkkeTilsvarande': !exists(json, 'kanIkkeTilsvarande') ? undefined : json['kanIkkeTilsvarande'],
        'navn': !exists(json, 'navn') ? undefined : json['navn'],
    };
}

export function HjelpemiddelToJSON(value?: Hjelpemiddel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'antall': value.antall,
        'beskrivelse': value.beskrivelse,
        'hjelpemiddelkategori': value.hjelpemiddelkategori,
        'hmsNr': value.hmsNr,
        'tilleggsinformasjon': value.tilleggsinformasjon,
        'rangering': value.rangering,
        'utlevertFraHjelpemiddelsentralen': value.utlevertFraHjelpemiddelsentralen,
        'vilkarliste': value.vilkarliste === undefined ? undefined : ((value.vilkarliste as Array<any>).map(HjelpemiddelVilkarToJSON)),
        'tilbehorListe': value.tilbehorListe === undefined ? undefined : ((value.tilbehorListe as Array<any>).map(TilbehorToJSON)),
        'begrunnelse': value.begrunnelse,
        'kanIkkeTilsvarande': value.kanIkkeTilsvarande,
        'navn': value.navn,
    };
}


